<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuButton1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALQAAAA5CAYAAACf4wE0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAQwSURBVHhe7Z0/aBRBFMavtExpcZO1tLS0tLQSS0sbIQiC
        goWFRRpBCGR3TysbCQgWgl3AKmCV8goLwUIQchhMwuX0zIWEe+v7dsfEmHfJ3eX+7CTfgx8J7MzuHPny
        7s2bmbeVcVkUZzPKDRdn8yBK5N1sIvWCLCMXAf/3TmX5rw6qqdyMXmaXvUzKbRioS2QOH8LFsqs/m/YH
        JRcVl0IT8lv18VV5GNWyq14+5bFqIncwQAy0wP4whPwLnJ46wJZqpqFe/HH0OrvkJTUdw9dH/p+WD8oe
        NCH9oBpqK9/hHL28JmcaG1/T/6p68fVhD5CQYYBzhJPE/MvLbbw2G8szl2Tb1mAIGR3qLFN562U3ekN8
        ow/54JIuxUwmgmptB5EAMmZehqMxZC/UM3+qxt0968GEjBMNQ9ZGlg1BvKyx8jfrQYRMCtXgunsht7ws
        h7M8r0wxk5KgIcgmHKyX52CWx8waZlg3JmRawMEOtdKICSBjZlJK1NEOtAhTpOaYzSDlJHe0qbz3cj3Z
        8kkg88yk/GxX4+y2l21vK/ZkmDcgpGTI1omhBxSvDemdSRBg/wc2NXn5Hjd6ZxIePby0Kv2BKv6n3YmQ
        cqITxI6rSc3L+NBU6Q2rAyFlB474iJeO4uyKhhu/rMaElB9pqoYPt5vO1uSpS6VjNyYkAFJZ8nLWyWAi
        n81GhASCariViznfGspzgCRwNMJoRqlcLw648kwgCRzV8L5LsicV1EqwGhASGqj9gvzzknWRkPCQVeys
        W7EvEhIWWOlmhoOcG/JMh3WBkFCBh16zLhASHrKDPRyr9kVCQkMalaLMrXWRkNCQOvPQ5NyQ56E1hkY9
        Zy59k+BRLS9UUGIJ6Q6rASGhgL0cKO+cb1BSQW9YjQgJBdVw52CTv4YcsUu6+1ZDQoIgleVczDDs9ldR
        s3g5CRKctnJxdtfLuTDG0SRcpK1O+WgNaRX0Kxcz7CABEsuKl/Gh+ZMrm2YHQkqLbPUsho4qNOqp23ZH
        QsoFIgpEFl6+xw1pDyje6kxI2dDJYOvUWtEaj9xj9VFSdlzSbbs0m/eyPdnUS3+sLrLYOSkxgxQ9RwpE
        YxMWbiQlpdtAtS8v1/4MHTRG+WHfkJBp0d3AQqCX6WCGjriBfWNCJovGzU2NHB55eQ5n1UTuM/NBpg3E
        rHFz4mV5NsMLD10q69aDCBk/3Y0ze+b/ze+b5kSRTBTM44aOmU8zvfGMhh91FTZXE8lYqcbS0ajgC5IT
        Xn7jM79E3sTrAKzBEDIs6pH3sAI4u5g97zvPPAqDt8a7LfBwDMIaHCGDoE6yFSXyZqhXH4/K8HAMQkW9
        iwFZAyWkNzigrcSy0nPX3DQMHhu1pnEURoWNUIT7QYgJHB8cIESsv89N1SP3Y4h98BLPouaH1P1Ekgs0
        F5Tim/tABwtwfHCAXi4jtErlD/ST6qHoW7gPAAAAAElFTkSuQmCC
</value>
  </data>
</root>